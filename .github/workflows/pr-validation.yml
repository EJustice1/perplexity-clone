name: Pull Request Validation

on:
  pull_request:
    branches: [ main, develop ]

env:
  PROJECT_ID: ${{ vars.PROJECT_ID || 'perplexity-clone-468820' }}

jobs:
  # Backend validation
  backend-validation:
    name: Backend Validation
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Cache Python dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('backend/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Install Python dependencies
      run: |
        cd backend
        pip install -r requirements.txt
        pip install pytest pytest-asyncio httpx black flake8 mypy
        
    - name: Run code formatting check
      run: |
        cd backend
        black --check --diff src/
        
    - name: Run linting
      run: |
        cd backend
        flake8 src/ --max-line-length=88 --extend-ignore=E203,W503
        
    - name: Run type checking
      run: |
        cd backend
        mypy src/ --ignore-missing-imports
        
    - name: Run backend tests
      run: |
        cd backend
        python -m pytest tests/ -v --tb=short --cov=src --cov-report=xml
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./backend/coverage.xml
        flags: backend
        name: backend-coverage

  # Frontend validation
  frontend-validation:
    name: Frontend Validation
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: Install frontend dependencies
      run: |
        cd frontend
        npm ci
        
    - name: Run linting
      run: |
        cd frontend
        npm run lint --if-present
        
    - name: Run type checking
      run: |
        cd frontend
        npm run type-check --if-present
        
    - name: Run frontend tests
      run: |
        cd frontend
        npm run test --if-present --coverage
        
    - name: Build frontend
      run: |
        cd frontend
        npm run build
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./frontend/coverage/lcov.info
        flags: frontend
        name: frontend-coverage

  # Security scanning
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
        
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'


